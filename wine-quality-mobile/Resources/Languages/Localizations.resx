<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
        Microsoft ResX Schema

        Version 1.3

        The primary goals of this format is to allow a simple XML format 
        that is mostly human readable. The generation and parsing of the 
        various data types are done through the TypeConverter classes 
        associated with the data types.

        Example:

        ... ado.net/XML headers & schema ...
        <resheader name="resmimetype">text/microsoft-resx</resheader>
        <resheader name="version">1.3</resheader>
        <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
        <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
        <data name="Name1">this is my long string</data>
        <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
        <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
            [base64 mime encoded serialized .NET Framework object]
        </data>
        <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
            [base64 mime encoded string representing a byte array form of the .NET Framework object]
        </data>

        There are any number of "resheader" rows that contain simple 
        name/value pairs.

        Each data row contains a name, and value. The row also contains a 
        type or mimetype. Type corresponds to a .NET class that support 
        text/value conversion through the TypeConverter architecture. 
        Classes that don't support this are serialized and stored with the 
        mimetype set.

        The mimetype is used for serialized objects, and tells the 
        ResXResourceReader how to depersist the object. This is currently not 
        extensible. For a given mimetype the value must be set accordingly:

        Note - application/x-microsoft.net.object.binary.base64 is the format 
        that the ResXResourceWriter will generate, however the reader can 
        read any of the formats listed below.

        mimetype: application/x-microsoft.net.object.binary.base64
        value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.soap.base64
        value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.bytearray.base64
        value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->

    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
    <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
    <data name="common.delete" xml:space="preserve">
    <value>Delete</value>
  </data>
    <data name="common.details" xml:space="preserve">
    <value>Details</value>
  </data>
    <data name="common.edit" xml:space="preserve">
    <value>Edit</value>
  </data>
    <data name="phases_header" xml:space="preserve">
    <value>Phases</value>
  </data>
    <data name="en-US" xml:space="preserve">
        <value>English</value>
    </data>
    <data name="uk-UA" xml:space="preserve">
        <value>Ukrainian</value>
    </data>
    <data name="phases_details_header" xml:space="preserve">
        <value>Phase details</value>
    </data>
    <data name="common_created_at" xml:space="preserve">
        <value>Created at</value>
    </data>
    <data name="common_updated_at" xml:space="preserve">
        <value>Updated at</value>
    </data>
    <data name="phases_parameters" xml:space="preserve">
        <value>Parameters</value>
    </data>
    <data name="wine_material_batch_details_header" xml:space="preserve">
        <value>Wine material batch details</value>
    </data>
    <data name="wine-material-batches.harvest-date" xml:space="preserve">
        <value>Harvest date</value>
    </data>
    <data name="wine-material-batches.harvest-location" xml:space="preserve">
        <value>Harvest location</value>
    </data>
    <data name="wine-material-batches.grape-sort" xml:space="preserve">
        <value>Grape sort</value>
    </data>
    <data name="wine-material-batches.active-phase.header" xml:space="preserve">
        <value>Active phase</value>
    </data>
    <data name="wine-material-batches.active-phase.phase" xml:space="preserve">
        <value>Phase</value>
    </data>
    <data name="wine-material-batches.active-phase.start-date" xml:space="preserve">
        <value>Start date</value>
    </data>
    <data name="wine-material-batches.active-phase.readings" xml:space="preserve">
        <value>Readings</value>
    </data>
    <data name="wine-material-batches.phases.header" xml:space="preserve">
        <value>Phases</value>
    </data>
    <data name="wine-material-batches.phases.start-date" xml:space="preserve">
        <value>Start date</value>
    </data>
    <data name="wine-material-batches.phases.end-date" xml:space="preserve">
        <value>End date</value>
    </data>
    <data name="common_loading" xml:space="preserve">
        <value>Loading</value>
    </data>
    <data name="sensors.header" xml:space="preserve">
        <value>Available sensors</value>
    </data>
    <data name="sensors.id" xml:space="preserve">
        <value>Device ID</value>
    </data>
    <data name="sensors.phase" xml:space="preserve">
        <value>Phase</value>
    </data>
    <data name="sensors.parameter" xml:space="preserve">
        <value>Parameter</value>
    </data>
    <data name="sensors.status" xml:space="preserve">
        <value>Status</value>
    </data>
    <data name="sensors.copy-device-key" xml:space="preserve">
        <value>Copy device key</value>
    </data>
    <data name="sensors.device-key-copied" xml:space="preserve">
        <value>Device key copied</value>
    </data>
    <data name="sensors.device-id-copied" xml:space="preserve">
        <value>Device id copied</value>
    </data>
    <data name="sensors.start" xml:space="preserve">
        <value>Start</value>
    </data>
    <data name="sensors.stop" xml:space="preserve">
        <value>Stop</value>
    </data>
    <data name="sensors.details.header" xml:space="preserve">
        <value>Sensor details</value>
    </data>
    <data name="sensors.details.no-phases" xml:space="preserve">
        <value>This sensor hasn't been linked to any phase yet.</value>
    </data>
    <data name="sensors.create.header" xml:space="preserve">
        <value>Create new sensor</value>
    </data>
    <data name="sensors.edit.header" xml:space="preserve">
        <value>Edit sensor</value>
    </data>
    <data name="sensors.delete.header" xml:space="preserve">
        <value>Confirm sensor deletion</value>
    </data>
    <data name="sensors.delete.warning" xml:space="preserve">
        <value>Are you sure you want to delete this sensor? This action cannot be undone.</value>
    </data>
    <data name="grape-sorts.header" xml:space="preserve">
      <value>Available grape sorts</value>
    </data>
        <data name="grape-sorts.name" xml:space="preserve">
      <value>Name</value>
    </data>
        <data name="grape-sorts.details.header" xml:space="preserve">
      <value>Grape sort details</value>
    </data>
        <data name="grape-sorts.details.phases" xml:space="preserve">
      <value>Phases</value>
    </data>
        <data name="grape-sorts.details.wine-material-batches" xml:space="preserve">
      <value>Wine material batches</value>
    </data>
        <data name="grape-sorts.create.header" xml:space="preserve">
      <value>Create new grape sort</value>
    </data>
        <data name="grape-sorts.edit.header" xml:space="preserve">
      <value>Edit grape sort</value>
    </data>
        <data name="grape-sorts.delete.header" xml:space="preserve">
      <value>Confirm grape sort deletion</value>
    </data>
        <data name="grape-sorts.delete.warning" xml:space="preserve">
      <value>Are you sure you want to delete this grape sort? This action cannot be undone.</value>
    </data>
        <data name="grape-sorts.edit-phases.button" xml:space="preserve">
      <value>Edit phases</value>
    </data>
        <data name="grape-sorts.edit-phases.header" xml:space="preserve">
      <value>Edit grape sort phases</value>
    </data>
        <data name="grape-sorts.edit-phases.available-phases" xml:space="preserve">
      <value>Available phases</value>
    </data>
        <data name="grape-sorts.edit-phases.grape-sort-phases" xml:space="preserve">
      <value>Grape sort phases</value>
    </data>
        <data name="grape-sorts.edit-phases.save" xml:space="preserve">
      <value>Save</value>
    </data>
        <data name="grape-sorts.edit-phases.saving" xml:space="preserve">
      <value>Saving...</value>
    </data>
        <data name="grape-sorts.edit-phases.saved" xml:space="preserve">
      <value>Phases order saved</value>
    </data>
</root>